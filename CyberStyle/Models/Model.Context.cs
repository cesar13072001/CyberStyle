//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CyberStyle.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class ciberstyleEntities : DbContext
    {
        public ciberstyleEntities()
            : base("name=ciberstyleEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Categoria> Categoria { get; set; }
        public virtual DbSet<DetallePago> DetallePago { get; set; }
        public virtual DbSet<Pago> Pago { get; set; }
        public virtual DbSet<Producto> Producto { get; set; }
        public virtual DbSet<Reclamos> Reclamos { get; set; }
        public virtual DbSet<Rol> Rol { get; set; }
        public virtual DbSet<Usuario> Usuario { get; set; }
    
        public virtual ObjectResult<compradetalle_Result> compradetalle(Nullable<int> idpago)
        {
            var idpagoParameter = idpago.HasValue ?
                new ObjectParameter("idpago", idpago) :
                new ObjectParameter("idpago", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<compradetalle_Result>("compradetalle", idpagoParameter);
        }
    
        public virtual ObjectResult<login_usuario_Result> login_usuario(string correo, string contrasenia)
        {
            var correoParameter = correo != null ?
                new ObjectParameter("correo", correo) :
                new ObjectParameter("correo", typeof(string));
    
            var contraseniaParameter = contrasenia != null ?
                new ObjectParameter("contrasenia", contrasenia) :
                new ObjectParameter("contrasenia", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<login_usuario_Result>("login_usuario", correoParameter, contraseniaParameter);
        }
    
        public virtual ObjectResult<mostrarUltimoPago_Result> mostrarUltimoPago(Nullable<int> idUsuario)
        {
            var idUsuarioParameter = idUsuario.HasValue ?
                new ObjectParameter("idUsuario", idUsuario) :
                new ObjectParameter("idUsuario", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<mostrarUltimoPago_Result>("mostrarUltimoPago", idUsuarioParameter);
        }
    
        public virtual ObjectResult<p_productoGeneral_Result> p_productoGeneral()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<p_productoGeneral_Result>("p_productoGeneral");
        }
    
        public virtual ObjectResult<p_productoMasVendido02_Result> p_productoMasVendido02()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<p_productoMasVendido02_Result>("p_productoMasVendido02");
        }
    
        public virtual int p_registrarProducto(string nombre, string descripcion, Nullable<int> categoria, Nullable<decimal> precio, byte[] imagen, Nullable<int> stock)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("nombre", nombre) :
                new ObjectParameter("nombre", typeof(string));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("descripcion", descripcion) :
                new ObjectParameter("descripcion", typeof(string));
    
            var categoriaParameter = categoria.HasValue ?
                new ObjectParameter("Categoria", categoria) :
                new ObjectParameter("Categoria", typeof(int));
    
            var precioParameter = precio.HasValue ?
                new ObjectParameter("precio", precio) :
                new ObjectParameter("precio", typeof(decimal));
    
            var imagenParameter = imagen != null ?
                new ObjectParameter("imagen", imagen) :
                new ObjectParameter("imagen", typeof(byte[]));
    
            var stockParameter = stock.HasValue ?
                new ObjectParameter("stock", stock) :
                new ObjectParameter("stock", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("p_registrarProducto", nombreParameter, descripcionParameter, categoriaParameter, precioParameter, imagenParameter, stockParameter);
        }
    }
}
